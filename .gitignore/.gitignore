#include <stdio.h>
#include <stdlib.h>
int BellmanFord(int Graph[20][20] , int V, int E, int Edge[20][2])
{
    int i,u,v,k,s,dist[20],parent[20],flag=1;
    for(i=0;i<V;i++)
        dist[i] = 1000 , parent[i] = -1 ;
        printf("Enter source: ");
        scanf("%d",&s);
        dist[s-1]=0 ;
    for(i=0;i<V-1;i++)
    {
        for(k=0;k<E;k++)
        {
            u = Edge[k][0] , v = Edge[k][1] ;
            if(dist[u]+Graph[u][v] < dist[v])
                dist[v] = dist[u] + Graph[u][v] , parent[v]=u ;
        }
    }
    for(k=0;k<E;k++)
        {
            u = Edge[k][0] , v = Edge[k][1] ;
            if(dist[u]+Graph[u][v] < dist[v])
                flag = 0 ;
        }
        if(flag)
            for(i=0;i<V;i++)
            printf("Vertex %d -> cost = %d parent = %d\n",i+1,dist[i],parent[i]+1);

        return flag;
}
main()
{
    int V,Edge[20][2],Graph[20][20],i,j,k=0;
    printf("BELLMAN FORD\n");
    printf("Enter no. of vertices: ");
    scanf("%d",&V);
    printf("Enter graph in matrix form:\n");
    for(i=0;i<V;i++)
        for(j=0;j<V;j++)
        {
            scanf("%d",&Graph[i][j]);
            if(Graph[i][j]!=0)
                Edge[k][0]=i,Edge[k++][1]=j;
        }

    if(BellmanFord(Graph,V,k,Edge))
        printf("\nNo negative weight cycle !\n");
    else printf("\nNegative weight cycle exists !!\n");
}

